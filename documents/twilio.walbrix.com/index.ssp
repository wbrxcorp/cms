<?xml version="1.0"?>
<%@ val request:javax.servlet.http.HttpServletRequest %>
<%@ val accountSid:String %>
<%@ val redirectMap:Seq[String] %>
<%@ val blackList:Seq[String] %>
<%
  val from = Option(request.getParameter("From")).getOrElse("Unknown")
  val response = if (accountSid != request.getParameter("AccountSid")) {
    <Reject />
  } else if (blackList.exists(_ == from)) {
    <Reject reason="rejected"/>
  } else {
    val to = Option(request.getParameter("To")).getOrElse("Unknown")
    val pstnToSipMap = redirectMap.map { line =>
      val splitted = line.split("=", 2)
      (splitted(0).trim,splitted(1).trim)
    }.toMap
    val sipToPstnMap = pstnToSipMap.map { case (k, v) => (v, k) }.toMap

    if (to.startsWith("sip:")) {
      val toNum = to.substring(4).split("@", 2)(0).replaceFirst("^0", "+81")
      sipToPstnMap.get(from).filter(_ != "default").orElse(sipToPstnMap.get("default")) match {
        case Some(fromNum) => <Dial callerId={fromNum}>{toNum}</Dial>
        case _ => <Reject />
      }
    } else {
      pstnToSipMap.get(to).filter(_ != "default").orElse(pstnToSipMap.get("default")) match {
        case Some(redirectTo) => <Dial callerId={from}><Sip>{redirectTo}</Sip></Dial>
        case _ => <Reject />
      }
    }
  }
%>
<Response>${response}</Response>
